name: Build & Publish Extensions

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.2.3)'
        required: true
      create_release:
        description: 'Create Git tag and GitHub Release?'
        type: boolean
        default: true
      publish_chrome:
        description: 'Publish to Chrome?'
        type: boolean
        default: false
      publish_firefox:
        description: 'Publish to Firefox?'
        type: boolean
        default: false
  push:
    tags:
      - 'v*'  # Still supports pushing tags manually if you prefer

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - run: npm ci

      # Determine version: use workflow input if manual dispatch, otherwise extract from tag
      - name: Determine version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/v}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

      # Update manifest.json files with version
      - name: Set version in manifest.json files
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          sudo apt-get update && sudo apt-get install -y jq
          for target in chromium firefox; do
            jq --arg v "$VERSION" '.version=$v' platform/$target/manifest.json > tmp && mv tmp platform/$target/manifest.json
          done

      # Build zips
      - run: node build.js

      # Upload build artifacts (optional)
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: extension-builds
          path: dist/zips/*

      # If triggered manually, create git tag and GitHub release
      - name: Create tag and release
        if: ${{ github.event_name == 'push' || github.event.inputs.create_release == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Copy-n-Paste v${{ steps.get_version.outputs.version }}
          body: |
            ## Download the latest release
            <p align="left">
            <a href="https://chromewebstore.google.com/detail/bnmdedmhngbeofnafobjmcihealecgnf"><img src="https://raw.githubusercontent.com/kazcfz/Browser-Extension-Promo-Badges/refs/heads/main/Google/Chrome%20Web%20Store/SVG%20(with%20border).svg" alt="Get Copy-n-Paste for Chromium" height="60px"></a>
            <a href="https://addons.mozilla.org/en-US/firefox/addon/copy-n-paste/"><img src="https://raw.githubusercontent.com/kazcfz/Browser-Extension-Promo-Badges/refs/heads/main/Mozilla/Firefox/Get%20The%20Add-On.svg" alt="Get Copy-n-Paste for Firefox" height="60px"></a>
            <a href="https://microsoftedge.microsoft.com/addons/detail/copynpaste-clipboard-u/akaimleajmhgmknjkodhggghkdbkjihb"><img src="https://raw.githubusercontent.com/kazcfz/Browser-Extension-Promo-Badges/refs/heads/main/Microsoft/Get%20it%20from%20Microsoft.svg" alt="Get Copy-n-Paste for Microsoft Edge" height="60px"></a>
            </p>
            <br>

            ## Fixes / changes
          files: |
            dist/zips/extension-chromium.zip
            dist/zips/extension-firefox.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Publish to Chrome Web Store
      - name: Publish Chrome Extension
        if: ${{ github.event_name == 'push' || github.event.inputs.publish_chrome == 'true' }}
        uses: mnao305/chrome-extension-upload@v5.0.0
        with:
          refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
          client-id: ${{ secrets.CHROME_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          extension-id: bnmdedmhngbeofnafobjmcihealecgnf
          file-path: dist/zips/extension-chromium.zip
          publish: true

      # Publish to Firefox AMO
      - name: Publish Firefox Extension
        if: ${{ github.event_name == 'push' || github.event.inputs.publish_firefox == 'true' }}
        uses: trmcnvn/firefox-addon@v1
        with:
          api-key: ${{ secrets.FIREFOX_JWT_ISSUER }}
          api-secret: ${{ secrets.FIREFOX_JWT_SECRET }}
          uuid: kazcfz@copy-n-paste
          xpi: dist/zips/extension-firefox.zip
          manifest: platform/firefox/manifest.json
